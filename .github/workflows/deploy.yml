name: verify Deploy Config

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
env:
  BRANCH_TEST: refs/heads/test
  BRANCH_MAIN: refs/heads/main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          registry-url: https://npm.pkg.github.com/

      - name: Log Context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github.event) }}
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: |
          echo "Job Env: $JOB_CONTEXT"
          echo "Github Env: $GITHUB_CONTEXT"

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          echo "##[set-output name=BRANCH;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Get Commit Infomation
        id: read-commit
        run: |
          echo "Last commit SHA: $(git rev-parse HEAD)"
          echo "Last commit message: $(git log -1 --pretty=format:%s)"
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "commit_msg=$(git log -1 --pretty=format:%s)" >> $GITHUB_OUTPUT

      - name: Check system resources
        run: |
          free -h
          df -h
          node -e "console.log(require('v8').getHeapStatistics())"

      - name: Cache node modules and build
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .umi
            .umi-production
            ~/.npm
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'hit'
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          npm install

      # - name: Check Eslint
      #   env:
      #     NODE_OPTIONS: "--max-old-space-size=8192"
      #   run: npm run lint

      - name: Build project based on branch
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          CI: "false"
        run: |
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Sync files to S3
        run: |
          aws s3 sync ./dist ${{ github.ref == 'refs/heads/main' && 's3://gosh-static/fe_verify/_next/static' || 's3://gosh-static-test/fe_verify/_next/static' }}

      # - name: Send Lark Notification
      #   if: always()
      #   run: |
      #     color="green"
      #     if [[ ${{ job.status }} = "failure" ]]; then
      #       color="red"
      #     fi

      #     message='{
      #       "msg_type": "interactive",
      #       "card": {
      #         "header": {
      #           "title": {
      #             "content": "发布状态：${{ job.status }}",
      #             "tag": "plain_text"
      #           },
      #           "template": "'$color'"
      #         },
      #         "elements": [
      #           {
      #             "tag": "div",
      #             "text": {
      #               "content": "项目: ${{ github.repository }}",
      #               "tag": "lark_md"
      #             }
      #           },
      #           {
      #             "tag": "div",
      #             "text": {
      #               "content": "分支: ${{ steps.extract_branch.outputs.BRANCH }}",
      #               "tag": "lark_md"
      #             }
      #           },
      #           {
      #             "tag": "div",
      #             "text": {
      #               "content": "提交信息: ${{ steps.read-commit.outputs.commit_msg }}",
      #               "tag": "lark_md"
      #             }
      #           },
      #           {
      #             "tag": "div",
      #             "text": {
      #               "content": "Commit ID: ${{ steps.read-commit.outputs.commit_sha }}",
      #               "tag": "lark_md"
      #             }
      #           },
      #           {
      #             "tag": "div",
      #             "text": {
      #               "content": "提交人: ${{ github.event.pull_request.user.login || github.actor }}",
      #               "tag": "lark_md"
      #             }
      #           },
      #           {
      #             "actions": [
      #               {
      #                 "tag": "button",
      #                 "text": {
      #                   "content": "查看部署详情",
      #                   "tag": "lark_md"
      #                 },
      #                 "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
      #                 "type": "default",
      #                 "value": {}
      #               }
      #             ],
      #             "tag": "action"
      #           }
      #         ]
      #       }
      #     }'

      #     curl -X POST -H "Content-Type: application/json" -d "$message" https://open.larksuite.com/open-apis/bot/v2/hook/8c59f77e-ade7-4560-9889-f4dc22c84b3b
